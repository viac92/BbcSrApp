@page "/DataGrid"

@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject ITicketsData _db

<h3>Ticket Aperti</h3>
@if (tickets is null)
{
    <p><em>Caricamento...</em></p>
}
else
{
//@dev per maggiori informazioni su come modificare la tabella vai
//su https://blazor.radzen.com/docs/guides/components/datagrid.html
<RadzenDataGrid AllowSorting="true" AllowFiltering="true" FilterMode="FilterMode.Simple" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data="@tickets" TItem="TicketModel">
    <Columns>
        <RadzenDataGridColumn TItem="TicketModel" Property="Id" Title="Id" />
        <RadzenDataGridColumn TItem="TicketModel" Property="CreateTime" Title="CreateTime" />
        <RadzenDataGridColumn TItem="TicketModel" Property="Store" Title="Store" />
        <RadzenDataGridColumn TItem="TicketModel" Property="Description" Title="Description" />
        <RadzenDataGridColumn TItem="TicketModel" Property="Fault" Title="Fault" />
        <RadzenDataGridColumn TItem="TicketModel" Property="Caller" Title="Caller" />
        <RadzenDataGridColumn TItem="TicketModel" Property="CloseTime" Title="CloseTime" />
    </Columns>
</RadzenDataGrid>
}


@code {
    private IEnumerable<TicketModel> tickets;


    protected override async Task OnInitializedAsync()
    {
        tickets = await _db.GetTicket();
    }
}