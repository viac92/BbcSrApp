@page "/Ticket"

@using DataAccessLibrary
@using DataAccessLibrary.Models 

@inject NavigationManager NavManager
@inject ITicketsData _db

@*mando Id ticket per il routing*@
@if (selectedTicket?.Any() == true)
{
    NavManager.NavigateTo($"/Ticket/{selectedTicket[0].TicketId}");
}

<h1 class="mb-5 col-12"><strong>Ticket</strong></h1>
@if (tickets is null)
{
    <p><em>Caricamento...</em></p>
}
else
{
//@dev per maggiori informazioni su come modificare la tabella vai
//su https://blazor.radzen.com/docs/guides/components/datagrid.html
<RadzenDataGrid AllowSorting="true" AllowFiltering="true" FilterMode="FilterMode.Simple" 
FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data="@tickets" TItem="TicketModel" 
AllowColumnResize="true" AllowColumnReorder="true" SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedTicket>
    <Columns>
        <RadzenDataGridColumn TItem="TicketModel" Property="TicketId" Title="Id" />
        <RadzenDataGridColumn TItem="TicketModel" Property="OpenTime" Title="Data apertura" Reorderable="true">
            <Template Context="data">
                @String.Format("{0:d}", data.OpenTime)
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="TicketModel" Property="SiteId" Title="Store" Reorderable="true">
            <Template Context="data">
                <p style="white-space:normal">@data.SiteId</p>
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="TicketModel" Property="Text" Title="Descrizione" Resizable="true" Reorderable="true" />
        <RadzenDataGridColumn TItem="TicketModel" Property="Subject" Title="Errore" Reorderable="true">
            <Template Context="data">
                <p style="white-space:normal">@data.Subject</p>
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="TicketModel" Property="Contact" Title="Operatore" Reorderable="true"/>
        <RadzenDataGridColumn TItem="TicketModel" Property="CloseTime" Title="Data chiusura" Reorderable="true">
            <Template Context="data">
                @if (data.CloseTime == DateTime.MinValue)
                {
                @String.Format("");
                }
                else
                {
                @String.Format("{0:d}", data.CloseTime);
                }
            </Template>
        </RadzenDataGridColumn>
</Columns>
</RadzenDataGrid>
<br/>
}


@code {
    private IEnumerable<TicketModel> tickets;
    private IList<TicketModel> selectedTicket;

    protected override async Task OnInitializedAsync()
    {
        tickets = await _db.GetTicket();
    }
}